---
# ansible-playbook.yml
- name: Set up Docker and deploy container on Azure VM
  hosts: all
  become: true
  gather_facts: no
  tasks:
    # Update apt packages
    - name: Update apt packages
      ansible.builtin.apt:
        update_cache: yes

    # Install Docker
    - name: Install Docker
      ansible.builtin.apt:
        name: docker.io
        state: present

    # Start Docker service
    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

###  Stage 3 ########################################
    # # Copy Dockerfile to VM
    - name: Copy Dockerfile to VM
      ansible.builtin.copy:
        src: ./Dockerfile  # Adjust path if necessary
        dest: /home/azureuser/Dockerfile
        owner: azureuser
        mode: '0644'

    # # Copy application code to VM
    - name: Copy application code to VM
      ansible.builtin.copy:
        src: ./html  # Adjust path if necessary
        dest: /home/azureuser/
        owner: azureuser
        mode: '0644'

    # # Build Docker image
    - name: Build Docker image
      ansible.builtin.command:
        cmd: docker build -t myapp:latest /home/azureuser/
        
     # Stop and remove existing Docker container (if any)
    - name: Stop and remove existing Docker container
      ansible.builtin.shell: |
        CONTAINER_ID=$(docker ps -q -f "publish=80")
        if [ -n "$CONTAINER_ID" ]; then
          echo "Stopping and removing existing container with ID: $CONTAINER_ID"
          docker stop $CONTAINER_ID
          docker rm $CONTAINER_ID
        else
          echo "No container found running on port 80"
        fi

    # # Run Docker container
    - name: Run Docker container
      ansible.builtin.command:
        cmd: docker run -d -p 80:80 myapp:latest
